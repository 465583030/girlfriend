!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
Add	/home/ben/gocode/src/github.com/golangdaddy/girlfriend/common/node.go	/^func (node *Node) Add(path string) *Node {$/;"	f	language:Go
addHandler	/home/ben/gocode/src/github.com/golangdaddy/girlfriend/common/node.go	/^func (node *Node) addHandler(method string, h *Handler) {$/;"	f	language:Go
GET	/home/ben/gocode/src/github.com/golangdaddy/girlfriend/common/node.go	/^func (node *Node) GET(functionKey string, responseSchema ...interface{}) *Node {$/;"	f	language:Go
gf	/home/ben/gocode/src/github.com/golangdaddy/girlfriend/common/node.go	/^package gf$/;"	p	language:Go
handler	/home/ben/gocode/src/github.com/golangdaddy/girlfriend/common/node.go	/^func (node *Node) handler(req RequestInterface) *Handler {$/;"	f	language:Go
new	/home/ben/gocode/src/github.com/golangdaddy/girlfriend/common/node.go	/^func (node *Node) new(path string) *Node {$/;"	f	language:Go
Next	/home/ben/gocode/src/github.com/golangdaddy/girlfriend/common/node.go	/^func (node *Node) Next(req RequestInterface, pathSegment string) (*Node, *ResponseStatus) {$/;"	f	language:Go
Node	/home/ben/gocode/src/github.com/golangdaddy/girlfriend/common/node.go	/^type Node struct {$/;"	t	language:Go
Param	/home/ben/gocode/src/github.com/golangdaddy/girlfriend/common/node.go	/^func (node *Node) Param(config *ValidationConfig, keys ...string) *Node {$/;"	f	language:Go
POST	/home/ben/gocode/src/github.com/golangdaddy/girlfriend/common/node.go	/^func (node *Node) POST(functionKey string, schemes ...interface{}) *Node {$/;"	f	language:Go
Template	/home/ben/gocode/src/github.com/golangdaddy/girlfriend/common/node.go	/^func (node *Node) Template(templatePath string) *Node {$/;"	f	language:Go
